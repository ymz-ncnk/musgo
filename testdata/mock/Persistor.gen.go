// Code generated by amockgen. DO NOT EDIT.

package mock

import amock_core "github.com/ymz-ncnk/amock/core"

// New creates a new Persistor.
func NewPersistor() Persistor {
	return Persistor{
		Mock: amock_core.New("Persistor"),
	}
}

// Persistor is a mock implementation of the persistor.Persistor.
type Persistor struct {
	*amock_core.Mock
}

// RegisterPersist registers a function as a single Persist() method call.
func (mock Persistor) RegisterPersist(
	fn func(p0 string, p1 []uint8, p2 string) (r0 error)) Persistor {
	mock.Register("Persist", fn)
	return mock
}

// RegisterPersist registers a function as n Persist() method calls.
func (mock Persistor) RegisterNPersist(n int,
	fn func(p0 string, p1 []uint8, p2 string) (r0 error)) Persistor {
	mock.RegisterN("Persist", n, fn)
	return mock
}

// UnregisterPersist unregisters Persist() method calls.
func (mock Persistor) UnregisterPersist() Persistor {
	mock.Unregister("Persist")
	return mock
}

func (mock Persistor) Persist(p0 string, p1 []uint8, p2 string) (r0 error) {
	result, err := mock.Call("Persist", p0, p1, p2)
	if err != nil {
		panic(err)
	}
	r0, _ = result[0].(error)
	return
}
