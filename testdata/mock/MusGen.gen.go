// Code generated by amockgen. DO NOT EDIT.

package mock

import (
	amock_core "github.com/ymz-ncnk/amock/core"
	"github.com/ymz-ncnk/musgen/v2"
)

// New creates a new MusGen.
func NewMusGen() MusGen {
	return MusGen{
		Mock: amock_core.New("MusGen"),
	}
}

// MusGen is a mock implementation of the musgen.MusGen.
type MusGen struct {
	*amock_core.Mock
}

// RegisterGenerate registers a function as a single Generate() method call.
func (mock MusGen) RegisterGenerate(
	fn func(p0 musgen.TypeDesc, p1 musgen.Lang) (r0 []uint8, r1 error)) MusGen {
	mock.Register("Generate", fn)
	return mock
}

// RegisterGenerate registers a function as n Generate() method calls.
func (mock MusGen) RegisterNGenerate(n int,
	fn func(p0 musgen.TypeDesc, p1 musgen.Lang) (r0 []uint8, r1 error)) MusGen {
	mock.RegisterN("Generate", n, fn)
	return mock
}

// UnregisterGenerate unregisters Generate() method calls.
func (mock MusGen) UnregisterGenerate() MusGen {
	mock.Unregister("Generate")
	return mock
}

func (mock MusGen) Generate(p0 musgen.TypeDesc, p1 musgen.Lang) (r0 []uint8, r1 error) {
	result, err := mock.Call("Generate", p0, p1)
	if err != nil {
		panic(err)
	}
	r0 = result[0].([]uint8)
	r1, _ = result[1].(error)
	return
}
